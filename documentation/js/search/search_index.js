var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.293,1,1.502]],["body/controllers/AppController.html",[0,1.884,1,2.189,2,1.439,3,0.583,4,0.486,5,0.486,6,2.354,7,0.583,8,1.63,9,3.646,10,1.964,11,0.055,12,1.079,13,2.947,14,1.245,15,1.63,16,0.901,17,0.805,18,1.817,19,2.354,20,0.583,21,0.236,22,2.354,23,1.439,24,1.439,25,2.947,26,0.031,27,0.041,28,0.031]],["title/modules/AppModule.html",[29,0.969,30,1.502]],["body/modules/AppModule.html",[1,1.895,2,1.358,3,0.366,4,0.305,5,0.305,11,0.055,16,1.086,17,0.505,18,1.766,19,1.479,20,0.366,21,0.148,26,0.019,27,0.029,28,0.019,29,1.223,30,2.713,31,0.782,32,0.782,33,1.05,34,1.05,35,0.782,36,1.895,37,1.05,38,1.479,39,1.479,40,1.479,41,2.041,42,2.041,43,1.53,44,1.578,45,1.05,46,1.05,47,1.851,48,1.631,49,2.668,50,1.479,51,1.479,52,1.05,53,1.479,54,1.851,55,1.851,56,1.851,57,1.851,58,2.781,59,1.851,60,1.569,61,1.851,62,1.851,63,1.851,64,1.851,65,1.851,66,1.851,67,1.479,68,1.851,69,1.851,70,1.851,71,1.479,72,1.851]],["title/injectables/AppService.html",[18,1.118,73,1.293]],["body/injectables/AppService.html",[3,0.624,4,0.521,5,0.521,7,0.624,8,1.704,9,3.742,11,0.054,12,1.156,14,1.334,15,1.704,16,0.737,17,0.862,18,1.704,20,0.624,21,0.253,24,1.541,26,0.033,27,0.042,28,0.033,73,1.97,74,2.103,75,2.522,76,3.157,77,3.157,78,3.157]],["title/modules/ConfigModule.html",[29,0.969,41,1.293]],["body/modules/ConfigModule.html",[3,0.543,4,0.453,5,0.453,11,0.054,16,0.86,17,0.75,20,0.543,21,0.22,26,0.029,27,0.039,28,0.029,29,1.521,31,1.161,32,1.161,33,1.559,34,1.559,35,1.161,36,2.09,37,2.357,41,2.26,44,2.09,45,1.559,46,1.559,60,2.09,79,2.195,80,2.195,81,2.748,82,2.748,83,2.748,84,2.748,85,1.831,86,2.748,87,2.195]],["title/classes/ConfigService.html",[21,0.212,60,1.118]],["body/classes/ConfigService.html",[3,0.479,4,0.399,5,0.399,7,0.479,8,1.427,11,0.054,12,1.424,14,1.023,15,1.988,16,0.789,20,0.479,21,0.194,23,1.899,24,1.182,26,0.025,27,0.035,28,0.025,60,1.427,88,1.373,89,1.934,90,2.25,91,3.108,92,3.89,93,1.934,94,3.378,95,3.378,96,1.916,97,1.649,98,1.649,99,1.334,100,2.421,101,3.378,102,2.421,103,1.934,104,3.378,105,3.378,106,2.421,107,2.421,108,2.421,109,2.421,110,2.421,111,2.421]],["title/classes/CreateUserDto.html",[21,0.212,112,1.293]],["body/classes/CreateUserDto.html",[3,0.529,4,0.441,5,0.441,7,0.529,10,2.409,11,0.053,12,1.324,15,1.854,16,0.624,20,0.529,21,0.29,23,2.308,26,0.028,27,0.038,28,0.028,88,1.516,90,2.409,99,1.145,112,1.765,113,3.273,114,2.135,115,2.73,116,2.73,117,2.673,118,2.673,119,2.673,120,2.673,121,3.615,122,3.615,123,4.097,124,2.673,125,2.673,126,2.135,127,2.673,128,2.673]],["title/classes/ServerExceptionFilter.html",[21,0.212,129,1.764]],["body/classes/ServerExceptionFilter.html",[3,0.488,4,0.407,5,0.407,7,0.488,8,1.447,11,0.054,12,0.904,14,1.043,16,0.8,17,0.674,20,0.488,21,0.198,26,0.026,27,0.036,28,0.026,88,1.401,96,1.401,97,1.206,98,1.206,99,0.782,129,2.282,130,2.736,131,1.973,132,3.425,133,3.932,134,3.425,135,3.425,136,4.246,137,3.932,138,4.246,139,2.47,140,2.47,141,2.47,142,2.47,143,1.973,144,3.932,145,2.47,146,2.47,147,3.425,148,2.47,149,3.425,150,2.47,151,2.47,152,2.47,153,2.47,154,2.47,155,2.47]],["title/interfaces/User.html",[156,1.502,157,1.118]],["body/interfaces/User.html",[3,0.594,4,0.495,5,0.495,7,0.594,11,0.052,15,2.154,20,0.594,26,0.032,27,0.041,28,0.032,90,2.602,98,1.907,99,1.375,115,3.062,116,3.062,156,1.703,157,1.65,158,3.001,159,2.398,160,3.062]],["title/controllers/UsersController.html",[0,1.293,48,1.293]],["body/controllers/UsersController.html",[0,0.877,2,0.877,3,0.355,4,0.296,5,0.296,7,0.355,8,1.149,10,2.437,11,0.055,12,1.339,14,1.545,16,0.854,17,0.491,20,0.355,21,0.144,22,1.435,23,0.877,24,1.786,26,0.019,27,0.029,28,0.019,43,1.201,48,1.328,96,1.861,97,1.602,98,1.602,99,0.861,103,1.435,112,2.21,157,0.759,160,2.618,161,1.435,162,1.797,163,1.435,164,2.172,165,2.172,166,2.922,167,2.172,168,1.797,169,3.28,170,1.797,171,3.531,172,1.435,173,2.719,174,1.797,175,1.797,176,1.797,177,2.719,178,1.797,179,3.28,180,1.797,181,1.797,182,1.797,183,1.797,184,1.797,185,1.435,186,1.435,187,1.435,188,1.435,189,1.797,190,1.797,191,1.797,192,1.797,193,1.797,194,1.797,195,1.797,196,1.797,197,1.797,198,1.797]],["title/modules/UsersModule.html",[29,0.969,42,1.293]],["body/modules/UsersModule.html",[2,1.621,3,0.467,4,0.39,5,0.39,11,0.055,16,1.025,17,0.645,20,0.467,21,0.189,26,0.025,27,0.035,28,0.025,29,1.406,31,0.998,32,0.998,33,1.34,34,1.34,35,0.998,36,2.178,37,1.884,42,2.222,43,1.666,44,1.884,45,1.34,46,1.34,48,1.875,49,1.887,50,1.887,51,1.887,52,1.34,97,1.621,157,1.403,186,1.887,199,2.362,200,2.362,201,2.362,202,2.362,203,2.558,204,2.362,205,3.32,206,2.652,207,3.32]],["title/injectables/UsersService.html",[43,0.969,73,1.293]],["body/injectables/UsersService.html",[3,0.328,4,0.273,5,0.273,7,0.328,8,1.079,11,0.055,12,1.387,14,1.481,16,0.885,17,0.452,20,0.328,21,0.133,23,0.809,24,1.712,26,0.017,27,0.027,28,0.017,43,0.935,52,0.94,67,3.725,73,1.248,74,1.104,91,1.323,93,1.323,96,1.989,97,1.712,98,1.712,99,1.111,112,1.712,157,1.6,160,2.336,164,2.041,165,2.041,166,2.801,167,2.041,171,3.441,172,2.041,185,1.323,187,1.323,188,1.323,208,1.323,209,1.656,210,3.506,211,1.656,212,2.555,213,2.555,214,1.656,215,4.003,216,1.656,217,1.656,218,2.555,219,3.506,220,1.656,221,1.656,222,1.656,223,1.323,224,1.656,225,3.506,226,1.656,227,1.656,228,1.656,229,2.555,230,1.656,231,1.656]],["title/coverage.html",[232,2.393]],["body/coverage.html",[0,1.714,1,1.453,5,0.422,6,2.045,11,0.053,18,1.082,21,0.321,26,0.027,27,0.037,28,0.027,35,1.082,43,0.937,48,1.25,60,1.082,73,1.714,75,2.045,85,1.706,89,2.045,99,0.811,112,1.25,113,2.045,114,2.045,129,1.706,130,2.045,131,2.045,156,1.453,157,1.082,159,2.045,161,2.045,203,1.706,208,2.045,232,1.706,233,2.56,234,2.56,235,2.56,236,4.995,237,4.007,238,3.511,239,2.56,240,2.045,241,2.56,242,3.511,243,2.56,244,2.56,245,2.045,246,2.56,247,2.56,248,2.56]],["title/dependencies.html",[32,1.343,249,2.221]],["body/dependencies.html",[11,0.056,17,0.781,21,0.303,26,0.03,27,0.04,28,0.03,32,1.209,52,1.623,53,2.285,126,2.285,143,3.022,223,2.285,250,4.24,251,2.861,252,2.861,253,2.861,254,2.861,255,2.861,256,2.861,257,2.861,258,2.861,259,2.861,260,2.861,261,2.861,262,2.861,263,2.861,264,2.861,265,2.861,266,2.861,267,2.861,268,2.861,269,2.861,270,2.861,271,2.861,272,2.861,273,2.861]],["title/miscellaneous/functions.html",[274,1.26,275,2.539]],["body/miscellaneous/functions.html",[7,0.756,11,0.048,26,0.04,27,0.048,28,0.04,35,2.046,245,3.056,274,2.17,275,3.056,276,3.825]],["title/index.html",[7,0.439,277,2.221,278,2.221]],["body/index.html",[4,0.375,11,0.053,26,0.024,27,0.034,28,0.024,87,1.817,232,1.515,279,2.274,280,2.274,281,3.232,282,2.274,283,2.274,284,2.274,285,2.274,286,2.274,287,2.274,288,2.274,289,2.274,290,2.274,291,2.274,292,3.76,293,2.274,294,2.274,295,2.274,296,2.274,297,4.624,298,2.274,299,2.274,300,4.495,301,2.274,302,2.274,303,3.232,304,2.274,305,2.274,306,2.274,307,2.274,308,3.232,309,3.232,310,2.274,311,2.274,312,2.274,313,3.232,314,3.232,315,2.274,316,2.274,317,2.274,318,2.274,319,2.274,320,1.817,321,2.274,322,2.274,323,2.274,324,2.274,325,2.274,326,2.274,327,2.274,328,2.274,329,2.274,330,2.274,331,2.274,332,2.274,333,2.274,334,2.274,335,2.274,336,2.274,337,2.274,338,2.274]],["title/modules.html",[31,1.518]],["body/modules.html",[11,0.046,26,0.038,27,0.046,28,0.038,30,2.042,31,1.521,41,1.757,42,1.757,320,3.769,339,4.718,340,4.718,341,4.718]],["title/overview.html",[342,2.869]],["body/overview.html",[2,1.305,11,0.052,18,1.731,26,0.028,27,0.038,28,0.028,29,0.978,30,2.857,31,1.129,32,1.129,33,1.516,34,1.516,35,1.129,36,1.516,37,1.516,38,2.135,39,2.135,40,2.135,41,2.143,42,2.239,43,1.607,44,2.051,45,1.516,46,1.516,60,1.854,74,1.781,79,2.135,80,2.135,88,1.516,156,1.516,342,2.135,343,3.615,344,3.615,345,2.673]],["title/miscellaneous/variables.html",[274,1.26,346,2.539]],["body/miscellaneous/variables.html",[7,0.605,11,0.055,15,1.67,26,0.032,27,0.042,28,0.032,71,3.498,85,2.037,99,1.387,115,2.037,116,2.037,163,2.443,203,2.633,206,3.157,240,2.443,274,1.735,346,2.443,347,3.058,348,3.058,349,3.058,350,3.952,351,3.058,352,3.058,353,3.058,354,3.058]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"classes/ServerExceptionFilter.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":269,"title":{},"body":{"dependencies.html":{}}}],["0.11.1",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":345,"title":{},"body":{"overview.html":{}}}],["1.7.4",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":344,"title":{},"body":{"overview.html":{}}}],["3",{"_index":343,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["3.22.0",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["5.9.7",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":150,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["6.4.0",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":229,"title":{},"body":{"injectables/UsersService.html":{}}}],["amazing",{"_index":321,"title":{},"body":{"index.html":{}}}],["angular",{"_index":290,"title":{},"body":{"index.html":{}}}],["app",{"_index":299,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":287,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":138,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["async",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["author",{"_index":331,"title":{},"body":{"index.html":{}}}],["await",{"_index":225,"title":{},"body":{"injectables/UsersService.html":{}}}],["backers",{"_index":322,"title":{},"body":{"index.html":{}}}],["body",{"_index":180,"title":{},"body":{"controllers/UsersController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":341,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":339,"title":{},"body":{"modules.html":{}}}],["building",{"_index":282,"title":{},"body":{"index.html":{}}}],["cache",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["cacheinterceptor",{"_index":181,"title":{},"body":{"controllers/UsersController.html":{}}}],["cachemodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["cachemodule.register",{"_index":207,"title":{},"body":{"modules/UsersModule.html":{}}}],["catch",{"_index":134,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["catch(exception",{"_index":135,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["class",{"_index":21,"title":{"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"classes/ServerExceptionFilter.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"classes/ServerExceptionFilter.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":88,"title":{},"body":{"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"classes/ServerExceptionFilter.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":79,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":80,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":199,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":200,"title":{},"body":{"modules/UsersModule.html":{}}}],["collection",{"_index":352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compression",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["config.service",{"_index":82,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config/config.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["config/config.service",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":41,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configmodule.forroot",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":60,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["configservice(`${process.env.node_env",{"_index":86,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configservice.get('mongodb_uri",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":144,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["constructor",{"_index":93,"title":{},"body":{"classes/ConfigService.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel('user",{"_index":224,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["constructor(type",{"_index":94,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(usermodel",{"_index":209,"title":{},"body":{"injectables/UsersService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('users",{"_index":189,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":232,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":164,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":192,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":168,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(user",{"_index":213,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":112,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["ctx",{"_index":145,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":148,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["customconfigmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"classes/ServerExceptionFilter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":184,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":173,"title":{},"body":{"controllers/UsersController.html":{}}}],["deletebyid",{"_index":165,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletebyid(@param('id",{"_index":197,"title":{},"body":{"controllers/UsersController.html":{}}}],["deletebyid(id",{"_index":172,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":291,"title":{},"body":{"index.html":{}}}],["development",{"_index":87,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["documentation",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":104,"title":{},"body":{"classes/ConfigService.html":{}}}],["dotenv.parse",{"_index":108,"title":{},"body":{"classes/ConfigService.html":{}}}],["dto/create",{"_index":187,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":310,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":283,"title":{},"body":{"index.html":{}}}],["email",{"_index":115,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["envconfig",{"_index":92,"title":{},"body":{"classes/ConfigService.html":{}}}],["envfilepath",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":154,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["exception",{"_index":140,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":131,"title":{},"body":{"classes/ServerExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:5",{"_index":139,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["exception.message",{"_index":155,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["exceptionfilter",{"_index":133,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"classes/ServerExceptionFilter.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":143,"title":{},"body":{"classes/ServerExceptionFilter.html":{},"dependencies.html":{}}}],["false",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"classes/ServerExceptionFilter.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":166,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":281,"title":{},"body":{"index.html":{}}}],["fs",{"_index":105,"title":{},"body":{"classes/ConfigService.html":{}}}],["fs.readfilesync",{"_index":109,"title":{},"body":{"classes/ConfigService.html":{}}}],["fullname",{"_index":116,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":275,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(param",{"_index":101,"title":{},"body":{"classes/ConfigService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":277,"title":{"index.html":{}},"body":{}}],["grow",{"_index":317,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":288,"title":{},"body":{"index.html":{}}}],["hello",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":328,"title":{},"body":{"index.html":{}}}],["host",{"_index":137,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":146,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["https://nestjs.com",{"_index":335,"title":{},"body":{"index.html":{}}}],["id",{"_index":160,"title":{},"body":{"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":234,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":132,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"classes/ServerExceptionFilter.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"classes/ServerExceptionFilter.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"classes/ServerExceptionFilter.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":73,"title":{"injectables/AppService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":221,"title":{},"body":{"injectables/UsersService.html":{}}}],["inspired",{"_index":289,"title":{},"body":{"index.html":{}}}],["installation",{"_index":296,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":298,"title":{},"body":{"index.html":{}}}],["interface",{"_index":156,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":158,"title":{},"body":{"interfaces/User.html":{}}}],["interfaces/user.interface",{"_index":185,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["internalservererrorexception",{"_index":136,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["isemail",{"_index":121,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail()@isnotempty",{"_index":117,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":123,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":122,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(1)@maxlength(24",{"_index":119,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["join",{"_index":324,"title":{},"body":{"index.html":{}}}],["json",{"_index":152,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["kamil",{"_index":332,"title":{},"body":{"index.html":{}}}],["key",{"_index":106,"title":{},"body":{"classes/ConfigService.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":338,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":314,"title":{},"body":{"index.html":{}}}],["literal",{"_index":100,"title":{},"body":{"classes/ConfigService.html":{}}}],["manager",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"classes/ServerExceptionFilter.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":125,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(24",{"_index":128,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":268,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"classes/ServerExceptionFilter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":124,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(1",{"_index":127,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":274,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":313,"title":{},"body":{"index.html":{}}}],["mode",{"_index":303,"title":{},"body":{"index.html":{}}}],["model",{"_index":210,"title":{},"body":{"injectables/UsersService.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":223,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":205,"title":{},"body":{"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":327,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":333,"title":{},"body":{"index.html":{}}}],["name",{"_index":97,"title":{},"body":{"classes/ConfigService.html":{},"classes/ServerExceptionFilter.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":292,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":337,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ServerExceptionFilter.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":85,"title":{},"body":{"modules/ConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newprofile",{"_index":219,"title":{},"body":{"injectables/UsersService.html":{}}}],["node.js",{"_index":280,"title":{},"body":{"index.html":{}}}],["npm",{"_index":297,"title":{},"body":{"index.html":{}}}],["open",{"_index":315,"title":{},"body":{"index.html":{}}}],["optional",{"_index":98,"title":{},"body":{"classes/ConfigService.html":{},"classes/ServerExceptionFilter.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":342,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":249,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":103,"title":{},"body":{"classes/ConfigService.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":195,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":96,"title":{},"body":{"classes/ConfigService.html":{},"classes/ServerExceptionFilter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["please",{"_index":325,"title":{},"body":{"index.html":{}}}],["post",{"_index":169,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":162,"title":{},"body":{"controllers/UsersController.html":{}}}],["private",{"_index":91,"title":{},"body":{"classes/ConfigService.html":{},"injectables/UsersService.html":{}}}],["process.cwd()}/src/config/env/.env.${type",{"_index":110,"title":{},"body":{"classes/ConfigService.html":{}}}],["process.cwd()}/src/config/env/.env.development",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":305,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":279,"title":{},"body":{"index.html":{}}}],["project",{"_index":316,"title":{},"body":{"index.html":{}}}],["promise",{"_index":171,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":90,"title":{},"body":{"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{}}}],["provide",{"_index":83,"title":{},"body":{"modules/ConfigModule.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["put",{"_index":183,"title":{},"body":{"controllers/UsersController.html":{}}}],["put(':id",{"_index":177,"title":{},"body":{"controllers/UsersController.html":{}}}],["read",{"_index":326,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":267,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":295,"title":{},"body":{"index.html":{}}}],["required",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":147,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":142,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"classes/ServerExceptionFilter.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"classes/ServerExceptionFilter.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"classes/ServerExceptionFilter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":300,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":284,"title":{},"body":{"index.html":{}}}],["schema",{"_index":206,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["schemas/user.schema",{"_index":204,"title":{},"body":{"modules/UsersModule.html":{}}}],["server",{"_index":285,"title":{},"body":{"index.html":{}}}],["serverexceptionfilter",{"_index":129,"title":{"classes/ServerExceptionFilter.html":{}},"body":{"classes/ServerExceptionFilter.html":{},"coverage.html":{}}}],["set",{"_index":230,"title":{},"body":{"injectables/UsersService.html":{}}}],["side",{"_index":286,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"classes/ServerExceptionFilter.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":319,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":276,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/components/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/components/app/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/components/app/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/components/app/app.service.ts",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/components/app/app.service.ts:5",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["src/components/config/config.module.ts",{"_index":81,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/components/config/config.service.ts",{"_index":89,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["src/components/config/config.service.ts:15",{"_index":102,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/components/config/config.service.ts:5",{"_index":95,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/components/users/dto/create",{"_index":113,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/components/users/interfaces/user.interface.ts",{"_index":159,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/components/users/schemas/user.schema.ts",{"_index":240,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/users/user.controller.ts",{"_index":161,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/components/users/user.controller.ts:22",{"_index":175,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/user.controller.ts:27",{"_index":170,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/user.controller.ts:32",{"_index":178,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/user.controller.ts:37",{"_index":174,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/user.module.ts",{"_index":201,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/components/users/user.service.ts",{"_index":208,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/components/users/user.service.ts:11",{"_index":217,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/user.service.ts:15",{"_index":214,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/user.service.ts:19",{"_index":220,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/user.service.ts:23",{"_index":216,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/user.service.ts:8",{"_index":211,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/exceptions/filters/server",{"_index":130,"title":{},"body":{"classes/ServerExceptionFilter.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":245,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":301,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":304,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":306,"title":{},"body":{"index.html":{}}}],["started",{"_index":278,"title":{"index.html":{}},"body":{}}],["starter",{"_index":294,"title":{},"body":{"index.html":{}}}],["statements",{"_index":235,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":149,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["status(status",{"_index":151,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["statuscode",{"_index":153,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["stay",{"_index":329,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":320,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":340,"title":{},"body":{"modules.html":{}}}],["table",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":309,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":312,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":311,"title":{},"body":{"index.html":{}}}],["tests",{"_index":308,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":318,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.envconfig",{"_index":107,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig[param",{"_index":111,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.usermodel.create(user",{"_index":227,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.deleteone",{"_index":231,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find",{"_index":226,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":228,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":193,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deletebyid(id",{"_index":198,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":191,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updatebyid(id",{"_index":196,"title":{},"body":{"controllers/UsersController.html":{}}}],["touch",{"_index":330,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":336,"title":{},"body":{"index.html":{}}}],["type",{"_index":99,"title":{},"body":{"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"classes/ServerExceptionFilter.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":222,"title":{},"body":{"injectables/UsersService.html":{}}}],["types.objectid",{"_index":215,"title":{},"body":{"injectables/UsersService.html":{}}}],["typescript",{"_index":293,"title":{},"body":{"index.html":{}}}],["unique",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":307,"title":{},"body":{"index.html":{}}}],["updatebyid",{"_index":167,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatebyid(@body",{"_index":194,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatebyid(id",{"_index":218,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatebyid(updateuserdto",{"_index":176,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserdto",{"_index":179,"title":{},"body":{"controllers/UsersController.html":{}}}],["uri",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["usecreateindex",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["useinterceptors",{"_index":182,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":190,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":157,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.controller",{"_index":202,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.dto",{"_index":188,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":114,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:14",{"_index":120,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":118,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.service",{"_index":186,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["usermodel",{"_index":212,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":163,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users/user.controller",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["users/user.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["users/user.service",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":203,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":48,"title":{"controllers/UsersController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":42,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":43,"title":{"injectables/UsersService.html":{}},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usevalue",{"_index":84,"title":{},"body":{"modules/ConfigModule.html":{}}}],["validator",{"_index":126,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":346,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["versionkey",{"_index":353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":141,"title":{},"body":{"classes/ServerExceptionFilter.html":{}}}],["watch",{"_index":302,"title":{},"body":{"index.html":{}}}],["website",{"_index":334,"title":{},"body":{"index.html":{}}}],["world",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":323,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/app/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/components/app/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, CacheModule } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersController } from '../users/user.controller';\nimport { UsersService } from '../users/user.service';\nimport { UsersModule } from '../users/user.module';\nimport { ConfigModule as CustomConfigModule } from '../config/config.module';\nimport { ConfigService } from '../config/config.service';\n\n@Module({\n  imports: [\n    UsersModule,\n    ConfigModule.forRoot({\n      envFilePath: `${process.cwd()}/src/config/env/.env.development`,\n    }),\n    MongooseModule.forRootAsync({\n      imports: [CustomConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'),\n        useCreateIndex: true,\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AppController, UsersController],\n  providers: [AppService, UsersService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/app/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/components/app/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from './config.service';\n\n@Module({\n  providers: [{\n    provide: ConfigService,\n    useValue: new ConfigService(`${process.env.NODE_ENV || 'development'}`),\n  }],\n  exports: [ConfigService],\n})\n\nexport class ConfigModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                envConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type)\n                    \n                \n                        \n                            \n                                Defined in src/components/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            envConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/config/config.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(param: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/config/config.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as dotenv from 'dotenv';\nimport * as fs from 'fs';\n\nexport class ConfigService {\n  private readonly envConfig: {[key: string]: string};\n\n  constructor(type) {\n    this.envConfig = dotenv.parse(\n      fs.readFileSync(\n        `${process.cwd()}/src/config/env/.env.${type}`\n      )\n    );\n  }\n\n  get(param: string): string {\n    return this.envConfig[param];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                fullname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/dto/create-user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fullname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@MinLength(1)@MaxLength(24)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/dto/create-user.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsString,\n  IsNotEmpty,\n  MinLength,\n  MaxLength\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(1)\n  @MaxLength(24)\n  readonly fullname: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  readonly email: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerExceptionFilter.html":{"url":"classes/ServerExceptionFilter.html","title":"class - ServerExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/filters/server-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: InternalServerErrorException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exceptions/filters/server-exception.filter.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            InternalServerErrorException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, ExceptionFilter, InternalServerErrorException } from '@nestjs/common';\nimport { Response } from 'express';\n\nexport class ServerExceptionFilter implements ExceptionFilter {\n  catch(exception: InternalServerErrorException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const res = ctx.getResponse();\n    const status = 500;\n\n    res\n      .status(status)\n      .json({\n        statusCode: status,\n        error: exception.message,\n      });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/interfaces/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        fullname\n                                \n                                \n                                            Optional\n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullname\n                                    \n                                \n                                \n                                    \n                                        fullname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id?: string;\n  fullname: string;\n  email: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                deleteById\n                            \n                            \n                                findAll\n                            \n                            \n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/components/users/user.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteById(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/components/users/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/components/users/user.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateById\n                        \n                        \n                    \n                \n            \n            \n                \nupdateById(updateUserDto: CreateUserDto, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/components/users/user.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Body,\n  Param,\n  CacheInterceptor,\n  UseInterceptors,\n  Get,\n  Post,\n  Put,\n  Delete\n} from '@nestjs/common';\nimport { User } from './interfaces/user.interface';\nimport { UsersService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\n\n@Controller('users')\n@UseInterceptors(CacheInterceptor)\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get()\n  findAll(): Promise {\n    return this.usersService.findAll();\n  }\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto): Promise {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Put(':id')\n  updateById(@Body() updateUserDto: CreateUserDto, @Param('id') id): Promise {\n    return this.usersService.updateById(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  deleteById(@Param('id') id): Promise {\n    return this.usersService.deleteById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/users/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CacheModule, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersController } from './user.controller';\nimport { UsersService } from './user.service';\nimport { UserSchema } from './schemas/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'User', schema: UserSchema }]),\n    CacheModule.register(),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [\n    MongooseModule.forFeature([{ name: 'User', schema: UserSchema }]),\n    CacheModule.register(),\n  ],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/components/users/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/user.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteById(id: Types.ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/user.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            Types.ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/user.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateById(id: Types.ObjectId, newProfile: User)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/user.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            Types.ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newProfile\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from './interfaces/user.interface';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { Model, Types } from 'mongoose';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel('User') private readonly userModel: Model) {}\n\n  async findAll(): Promise {\n    return await this.userModel.find();\n  }\n\n  async create(user: CreateUserDto): Promise {\n    return await this.userModel.create(user);\n  }\n\n  async updateById(id: Types.ObjectId, newProfile: User): Promise {\n    return await this.userModel.updateOne({ _id: id }, { $set: newProfile });\n  }\n\n  async deleteById(id: Types.ObjectId): Promise {\n    return await this.userModel.deleteOne({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/components/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/components/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/components/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/components/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/users/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/components/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/users/user.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/users/user.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/exceptions/filters/server-exception.filter.ts\n            \n            class\n            ServerExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : 7.0.0\n        \n            @nestjs/config : 0.4.0\n        \n            @nestjs/core : 7.0.0\n        \n            @nestjs/mongoose : 6.4.0\n        \n            @nestjs/platform-express : 7.0.0\n        \n            cache-manager : 3.2.1\n        \n            class-transformer : 0.2.3\n        \n            class-validator : 0.11.1\n        \n            compression : 1.7.4\n        \n            express : 4.17.1\n        \n            helmet : ^3.22.0\n        \n            mongoose : 5.9.7\n        \n            reflect-metadata : 0.1.13\n        \n            rimraf : 3.0.2\n        \n            rxjs : 6.5.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/components/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Schema\n\n                        \n                    \n                    \n                        \n                            Default value : new Schema(\n  {\n    fullname: {\n      type: String,\n      required: true,\n    },\n    email: {\n      type: String,\n      unique: true,\n      required: true,\n    },\n  },\n  {\n    collection: 'users',\n    versionKey: false,\n  }\n)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
