var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.212,1,1.764]],["body/classes/AllExceptionsFilter.html",[0,0.185,1,2.175,2,1.308,3,0.456,4,0.38,5,0.38,6,2.607,7,1.842,8,3.264,9,3.789,10,0.456,11,1.379,12,4.12,13,3.264,14,3.789,15,3.789,16,4.12,17,0.844,18,2.306,19,1.126,20,0.055,21,0.974,22,0.73,23,0.974,24,3.264,25,0.974,26,0.762,27,3.264,28,2.306,29,0.629,30,2.306,31,1.842,32,0.456,33,3.789,34,2.306,35,2.306,36,3.264,37,2.306,38,3.789,39,2.306,40,2.306,41,2.306,42,2.306,43,1.379,44,2.306,45,2.306,46,2.306,47,2.306,48,2.306,49,2.306,50,0.024,51,0.034,52,0.024]],["title/controllers/AppController.html",[53,1.293,54,1.502]],["body/controllers/AppController.html",[0,0.238,3,0.586,4,0.489,5,0.489,10,0.586,11,1.637,17,1.086,20,0.055,25,1.253,26,0.905,29,0.81,32,0.586,43,1.253,50,0.031,51,0.041,52,0.031,53,1.891,54,2.198,55,1.448,56,2.369,57,3.654,58,1.976,59,2.965,60,1.637,61,1.823,62,2.369,63,2.369,64,1.448,65,2.965]],["title/modules/AppModule.html",[66,0.969,67,1.502]],["body/modules/AppModule.html",[0,0.15,3,0.37,4,0.309,5,0.309,20,0.056,26,1.089,29,0.511,32,0.37,50,0.02,51,0.029,52,0.02,54,1.907,55,1.369,61,1.773,62,1.495,66,1.231,67,2.719,68,0.791,69,0.791,70,1.062,71,1.062,72,0.791,73,1.907,74,1.062,75,1.495,76,1.495,77,1.495,78,2.05,79,2.05,80,1.537,81,1.591,82,1.062,83,1.062,84,1.872,85,1.642,86,2.686,87,1.495,88,1.495,89,1.062,90,1.495,91,1.872,92,1.872,93,1.872,94,1.872,95,2.804,96,1.872,97,1.577,98,1.872,99,1.872,100,1.872,101,1.872,102,1.872,103,1.872,104,1.495,105,1.872,106,1.872,107,1.872,108,1.495,109,1.872]],["title/injectables/AppService.html",[61,1.118,110,1.293]],["body/injectables/AppService.html",[0,0.254,3,0.628,4,0.523,5,0.523,10,0.628,11,1.71,17,1.162,20,0.054,25,1.341,26,0.741,29,0.866,32,0.628,43,1.341,50,0.033,51,0.043,52,0.033,57,3.749,60,1.71,61,1.71,110,1.976,111,2.114,112,2.535,113,3.173,114,3.173,115,3.173]],["title/modules/ConfigModule.html",[66,0.969,78,1.293]],["body/modules/ConfigModule.html",[0,0.222,3,0.547,4,0.456,5,0.456,20,0.054,26,0.864,29,0.755,32,0.547,50,0.029,51,0.039,52,0.029,66,1.527,68,1.169,69,1.169,70,1.57,71,1.57,72,1.169,73,2.1,74,2.366,78,2.266,81,2.1,82,1.57,83,1.57,97,2.093,116,2.211,117,2.211,118,2.767,119,2.767,120,2.767,121,2.767,122,1.844,123,2.767,124,2.211]],["title/classes/ConfigService.html",[0,0.212,97,1.118]],["body/classes/ConfigService.html",[0,0.196,2,1.385,3,0.483,4,0.403,5,0.403,10,0.483,11,1.435,17,1.431,19,1.659,20,0.055,21,1.435,22,1.339,23,1.435,25,1.031,26,0.794,32,0.483,43,1.031,50,0.026,51,0.036,52,0.026,60,1.993,64,1.908,97,1.435,125,1.95,126,2.264,127,3.122,128,3.908,129,1.95,130,3.398,131,3.398,132,2.441,133,3.398,134,2.441,135,1.95,136,3.398,137,3.398,138,2.441,139,2.441,140,2.441,141,2.441,142,2.441,143,2.441]],["title/classes/CreateUserDto.html",[0,0.212,144,1.293]],["body/classes/CreateUserDto.html",[0,0.291,2,1.527,3,0.532,4,0.444,5,0.444,10,0.532,17,1.33,20,0.053,22,1.151,26,0.629,32,0.532,50,0.028,51,0.038,52,0.028,58,2.421,60,1.86,64,2.313,126,2.421,144,1.774,145,3.285,146,2.151,147,2.74,148,2.74,149,2.692,150,2.692,151,2.692,152,2.692,153,3.633,154,3.633,155,4.113,156,2.692,157,2.692,158,2.151,159,2.692,160,2.692]],["title/interfaces/User.html",[161,1.502,162,1.118]],["body/interfaces/User.html",[3,0.597,4,0.498,5,0.498,10,0.597,20,0.052,22,1.379,23,1.656,32,0.597,50,0.032,51,0.041,52,0.032,60,2.156,126,2.612,147,3.069,148,3.069,161,1.713,162,1.656,163,3.019,164,2.412,165,3.069]],["title/controllers/UsersController.html",[53,1.293,85,1.293]],["body/controllers/UsersController.html",[0,0.146,3,0.359,4,0.3,5,0.3,10,0.359,11,1.159,17,1.347,19,1.613,20,0.055,21,1.395,22,0.869,23,1.395,25,1.554,26,0.859,29,0.496,32,0.359,43,1.554,50,0.019,51,0.029,52,0.019,53,0.887,55,0.887,58,2.451,63,1.452,64,0.887,80,1.209,85,1.339,135,1.452,144,2.217,162,0.768,165,2.631,166,1.452,167,1.817,168,1.452,169,2.191,170,2.191,171,2.938,172,2.191,173,1.817,174,3.303,175,1.817,176,3.543,177,1.452,178,2.742,179,1.817,180,1.817,181,1.817,182,2.742,183,1.817,184,3.303,185,1.817,186,1.817,187,1.817,188,1.817,189,1.817,190,1.452,191,1.452,192,1.452,193,1.452,194,1.817,195,1.817,196,1.817,197,1.817,198,1.817,199,1.817,200,1.817,201,1.817,202,1.817,203,1.817]],["title/modules/UsersModule.html",[66,0.969,79,1.293]],["body/modules/UsersModule.html",[0,0.191,3,0.471,4,0.393,5,0.393,20,0.055,21,1.411,26,1.028,29,0.651,32,0.471,50,0.025,51,0.035,52,0.025,55,1.631,66,1.412,68,1.007,69,1.007,70,1.352,71,1.352,72,1.007,73,2.188,74,1.895,79,2.228,80,1.671,81,1.895,82,1.352,83,1.352,85,1.883,86,1.903,87,1.903,88,1.903,89,1.352,162,1.411,191,1.903,204,2.383,205,2.383,206,2.383,207,2.383,208,2.57,209,2.383,210,3.341,211,2.669,212,3.341]],["title/injectables/UsersService.html",[80,0.969,110,1.293]],["body/injectables/UsersService.html",[0,0.134,3,0.332,4,0.276,5,0.276,10,0.332,11,1.089,17,1.395,19,1.723,20,0.055,21,1.491,22,1.118,23,1.491,25,1.491,26,0.89,29,0.458,32,0.332,43,1.491,50,0.018,51,0.027,52,0.018,64,0.819,80,0.944,89,0.951,104,3.736,110,1.259,111,1.117,127,1.339,129,1.339,144,1.723,162,1.609,165,2.351,169,2.06,170,2.06,171,2.819,172,2.06,176,3.455,177,2.06,190,1.339,192,1.339,193,1.339,213,1.339,214,1.676,215,3.529,216,1.676,217,2.579,218,2.579,219,1.676,220,4.022,221,1.676,222,1.676,223,2.579,224,3.529,225,1.676,226,1.676,227,1.676,228,1.339,229,1.676,230,3.529,231,1.676,232,1.676,233,1.676,234,2.579,235,1.676,236,1.676]],["title/coverage.html",[237,2.393]],["body/coverage.html",[0,0.318,1,1.668,5,0.413,6,1.999,7,1.999,20,0.054,22,0.793,50,0.026,51,0.036,52,0.026,53,1.688,54,1.42,56,1.999,61,1.057,72,1.057,80,0.916,85,1.222,97,1.057,110,1.688,112,1.999,122,1.668,125,1.999,144,1.222,145,1.999,146,1.999,161,1.42,162,1.057,164,1.999,166,1.999,208,1.668,213,1.999,237,1.668,238,2.503,239,2.503,240,2.503,241,5.023,242,3.96,243,3.457,244,2.503,245,1.999,246,2.503,247,3.96,248,2.503,249,2.503,250,1.999,251,3.457,252,1.999,253,1.999,254,2.503,255,2.503]],["title/dependencies.html",[69,1.343,256,2.221]],["body/dependencies.html",[0,0.305,20,0.056,29,0.786,31,3.035,50,0.03,51,0.04,52,0.03,69,1.216,89,1.633,90,2.3,158,2.3,228,2.3,257,4.253,258,2.879,259,2.879,260,2.879,261,2.879,262,2.879,263,2.879,264,2.879,265,2.879,266,2.879,267,2.879,268,2.879,269,2.879,270,2.879,271,2.879,272,2.879,273,2.879,274,2.879,275,2.879,276,2.879,277,2.879,278,2.879,279,2.879,280,2.879]],["title/miscellaneous/functions.html",[281,1.26,282,2.539]],["body/miscellaneous/functions.html",[10,0.704,19,1.738,20,0.049,21,1.504,23,1.504,50,0.037,51,0.046,52,0.037,72,1.983,250,2.843,252,3.473,253,2.843,281,2.019,282,2.843,283,3.559,284,3.559,285,3.559,286,2.843]],["title/index.html",[10,0.439,287,2.221,288,2.221]],["body/index.html",[4,0.378,20,0.054,50,0.024,51,0.034,52,0.024,124,1.833,237,1.529,286,1.833,289,2.295,290,2.295,291,3.253,292,2.295,293,2.295,294,2.295,295,2.295,296,2.295,297,2.295,298,2.295,299,2.295,300,2.295,301,2.295,302,3.779,303,2.295,304,2.295,305,2.295,306,2.295,307,4.636,308,2.295,309,4.508,310,2.295,311,2.295,312,3.253,313,2.295,314,2.295,315,2.295,316,2.295,317,3.253,318,3.253,319,2.295,320,2.295,321,2.295,322,3.253,323,3.253,324,2.295,325,2.295,326,2.295,327,2.295,328,2.295,329,1.833,330,2.295,331,2.295,332,2.295,333,2.295,334,2.295,335,2.295,336,2.295,337,2.295,338,2.295,339,2.295,340,2.295,341,2.295,342,2.295,343,2.295,344,2.295,345,2.295,346,2.295,347,2.295]],["title/modules.html",[68,1.518]],["body/modules.html",[20,0.046,50,0.038,51,0.046,52,0.038,67,2.048,68,1.525,78,1.763,79,1.763,329,3.774,348,4.724,349,4.724,350,4.724]],["title/overview.html",[351,2.869]],["body/overview.html",[2,1.527,20,0.052,50,0.028,51,0.038,52,0.028,55,1.315,61,1.737,66,0.986,67,2.861,68,1.137,69,1.137,70,1.527,71,1.527,72,1.137,73,1.527,74,1.527,75,2.151,76,2.151,77,2.151,78,2.15,79,2.245,80,1.612,81,2.061,82,1.527,83,1.527,97,1.86,111,1.794,116,2.151,117,2.151,161,1.527,351,2.151,352,3.633,353,3.633,354,2.692]],["title/miscellaneous/variables.html",[281,1.26,355,2.539]],["body/miscellaneous/variables.html",[10,0.624,20,0.055,22,1.408,50,0.033,51,0.042,52,0.033,60,1.703,108,2.519,122,2.101,147,2.101,148,2.101,168,2.519,208,2.686,211,3.22,245,2.519,281,1.789,355,2.519,356,3.153,357,3.153,358,3.153,359,3.153,360,3.153,361,3.153,362,3.153]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["0.11.1",{"_index":267,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":354,"title":{},"body":{"overview.html":{}}}],["1.7.4",{"_index":269,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":353,"title":{},"body":{"overview.html":{}}}],["3",{"_index":352,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["3.22.0",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["5.9.7",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":234,"title":{},"body":{"injectables/UsersService.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["amazing",{"_index":330,"title":{},"body":{"index.html":{}}}],["angular",{"_index":300,"title":{},"body":{"index.html":{}}}],["app",{"_index":286,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":54,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":297,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":67,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":61,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["async",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["author",{"_index":340,"title":{},"body":{"index.html":{}}}],["await",{"_index":230,"title":{},"body":{"injectables/UsersService.html":{}}}],["backers",{"_index":331,"title":{},"body":{"index.html":{}}}],["body",{"_index":185,"title":{},"body":{"controllers/UsersController.html":{}}}],["bootstrap",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":350,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":348,"title":{},"body":{"modules.html":{}}}],["building",{"_index":292,"title":{},"body":{"index.html":{}}}],["cache",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["cacheinterceptor",{"_index":186,"title":{},"body":{"controllers/UsersController.html":{}}}],["cachemodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["cachemodule.register",{"_index":212,"title":{},"body":{"modules/UsersModule.html":{}}}],["catch",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(exception",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":116,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":117,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":204,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":205,"title":{},"body":{"modules/UsersModule.html":{}}}],["collection",{"_index":360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compression",{"_index":268,"title":{},"body":{"dependencies.html":{}}}],["config.service",{"_index":119,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config/config.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["config/config.service",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":78,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configmodule.forroot",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":97,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["configservice(`${process.env.node_env",{"_index":123,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configservice.get('mongodb_uri",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor",{"_index":129,"title":{},"body":{"classes/ConfigService.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel('user",{"_index":229,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["constructor(type",{"_index":130,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(usermodel",{"_index":214,"title":{},"body":{"injectables/UsersService.html":{}}}],["controller",{"_index":53,"title":{"controllers/AppController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('users",{"_index":194,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":237,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":169,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":197,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":173,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(user",{"_index":218,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":144,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["ctx",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["customconfigmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":189,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":178,"title":{},"body":{"controllers/UsersController.html":{}}}],["deletebyid",{"_index":170,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletebyid(@param('id",{"_index":202,"title":{},"body":{"controllers/UsersController.html":{}}}],["deletebyid(id",{"_index":177,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":69,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":301,"title":{},"body":{"index.html":{}}}],["development",{"_index":124,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["documentation",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":136,"title":{},"body":{"classes/ConfigService.html":{}}}],["dotenv.parse",{"_index":140,"title":{},"body":{"classes/ConfigService.html":{}}}],["dto/create",{"_index":192,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":319,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":293,"title":{},"body":{"index.html":{}}}],["email",{"_index":147,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["envconfig",{"_index":128,"title":{},"body":{"classes/ConfigService.html":{}}}],["envfilepath",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["exception",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception['errmsg",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":9,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exceptions.filter.ts:12",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["export",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["false",{"_index":362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":171,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":291,"title":{},"body":{"index.html":{}}}],["fs",{"_index":137,"title":{},"body":{"classes/ConfigService.html":{}}}],["fs.readfilesync",{"_index":141,"title":{},"body":{"classes/ConfigService.html":{}}}],["fullname",{"_index":148,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":282,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(param",{"_index":133,"title":{},"body":{"classes/ConfigService.html":{}}}],["gethello",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":287,"title":{"index.html":{}},"body":{}}],["grow",{"_index":326,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":298,"title":{},"body":{"index.html":{}}}],["hello",{"_index":114,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":337,"title":{},"body":{"index.html":{}}}],["host",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["https://nestjs.com",{"_index":344,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["id",{"_index":165,"title":{},"body":{"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["import",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["init",{"_index":252,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["init(app",{"_index":285,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inject",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":110,"title":{"injectables/AppService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":111,"title":{},"body":{"injectables/AppService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":226,"title":{},"body":{"injectables/UsersService.html":{}}}],["inspired",{"_index":299,"title":{},"body":{"index.html":{}}}],["installation",{"_index":306,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":308,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["interface",{"_index":161,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":163,"title":{},"body":{"interfaces/User.html":{}}}],["interfaces/user.interface",{"_index":190,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["isemail",{"_index":153,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail()@isnotempty",{"_index":149,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":155,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":154,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(1)@maxlength(24",{"_index":151,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["join",{"_index":333,"title":{},"body":{"index.html":{}}}],["json(exception['response",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["kamil",{"_index":341,"title":{},"body":{"index.html":{}}}],["key",{"_index":138,"title":{},"body":{"classes/ConfigService.html":{}}}],["legend",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":347,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":323,"title":{},"body":{"index.html":{}}}],["literal",{"_index":132,"title":{},"body":{"classes/ConfigService.html":{}}}],["manager",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":157,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(24",{"_index":160,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["metadata",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":156,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(1",{"_index":159,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":281,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":322,"title":{},"body":{"index.html":{}}}],["mode",{"_index":312,"title":{},"body":{"index.html":{}}}],["model",{"_index":215,"title":{},"body":{"injectables/UsersService.html":{}}}],["module",{"_index":66,"title":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":68,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":228,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":210,"title":{},"body":{"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":336,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":342,"title":{},"body":{"index.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ConfigService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":302,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":346,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":122,"title":{},"body":{"modules/ConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newprofile",{"_index":224,"title":{},"body":{"injectables/UsersService.html":{}}}],["node.js",{"_index":290,"title":{},"body":{"index.html":{}}}],["npm",{"_index":307,"title":{},"body":{"index.html":{}}}],["open",{"_index":324,"title":{},"body":{"index.html":{}}}],["optional",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ConfigService.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":351,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":256,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":135,"title":{},"body":{"classes/ConfigService.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":200,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ConfigService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["please",{"_index":334,"title":{},"body":{"index.html":{}}}],["post",{"_index":174,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":167,"title":{},"body":{"controllers/UsersController.html":{}}}],["private",{"_index":127,"title":{},"body":{"classes/ConfigService.html":{},"injectables/UsersService.html":{}}}],["process.cwd()}/src/config/env/.env.${type",{"_index":142,"title":{},"body":{"classes/ConfigService.html":{}}}],["process.cwd()}/src/config/env/.env.development",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":314,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":289,"title":{},"body":{"index.html":{}}}],["project",{"_index":325,"title":{},"body":{"index.html":{}}}],["promise",{"_index":176,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":126,"title":{},"body":{"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{}}}],["provide",{"_index":120,"title":{},"body":{"modules/ConfigModule.html":{}}}],["providers",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["put",{"_index":188,"title":{},"body":{"controllers/UsersController.html":{}}}],["put(':id",{"_index":182,"title":{},"body":{"controllers/UsersController.html":{}}}],["read",{"_index":335,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":305,"title":{},"body":{"index.html":{}}}],["res",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["res.status(500).json",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["reset",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["result",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":309,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":294,"title":{},"body":{"index.html":{}}}],["schema",{"_index":211,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["schemas/user.schema",{"_index":209,"title":{},"body":{"modules/UsersModule.html":{}}}],["server",{"_index":295,"title":{},"body":{"index.html":{}}}],["set",{"_index":235,"title":{},"body":{"injectables/UsersService.html":{}}}],["side",{"_index":296,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":328,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":283,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../middleware.ts",{"_index":284,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/components/app/app.controller.ts",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/components/app/app.controller.ts:9",{"_index":59,"title":{},"body":{"controllers/AppController.html":{}}}],["src/components/app/app.module.ts",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["src/components/app/app.service.ts",{"_index":112,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/components/app/app.service.ts:5",{"_index":113,"title":{},"body":{"injectables/AppService.html":{}}}],["src/components/config/config.module.ts",{"_index":118,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/components/config/config.service.ts",{"_index":125,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["src/components/config/config.service.ts:15",{"_index":134,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/components/config/config.service.ts:5",{"_index":131,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/components/users/dto/create",{"_index":145,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/components/users/interfaces/user.interface.ts",{"_index":164,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/components/users/schemas/user.schema.ts",{"_index":245,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/users/user.controller.ts",{"_index":166,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/components/users/user.controller.ts:22",{"_index":180,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/user.controller.ts:27",{"_index":175,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/user.controller.ts:32",{"_index":183,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/user.controller.ts:37",{"_index":179,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/user.module.ts",{"_index":206,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/components/users/user.service.ts",{"_index":213,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/components/users/user.service.ts:11",{"_index":222,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/user.service.ts:15",{"_index":219,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/user.service.ts:19",{"_index":225,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/user.service.ts:23",{"_index":221,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/user.service.ts:8",{"_index":216,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/config/middleware.ts",{"_index":250,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/exceptions/filters/all",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":253,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":310,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":313,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":315,"title":{},"body":{"index.html":{}}}],["started",{"_index":288,"title":{"index.html":{}},"body":{}}],["starter",{"_index":304,"title":{},"body":{"index.html":{}}}],["statements",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["status(status",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["statuscode",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["stay",{"_index":338,"title":{},"body":{"index.html":{}}}],["string",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":329,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":349,"title":{},"body":{"modules.html":{}}}],["table",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":318,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":321,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":320,"title":{},"body":{"index.html":{}}}],["tests",{"_index":317,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":327,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["this.envconfig",{"_index":139,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig[param",{"_index":143,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.usermodel.create(user",{"_index":232,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.deleteone",{"_index":236,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find",{"_index":231,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":233,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":198,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deletebyid(id",{"_index":203,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":196,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updatebyid(id",{"_index":201,"title":{},"body":{"controllers/UsersController.html":{}}}],["touch",{"_index":339,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":345,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ConfigService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":227,"title":{},"body":{"injectables/UsersService.html":{}}}],["types.objectid",{"_index":220,"title":{},"body":{"injectables/UsersService.html":{}}}],["typescript",{"_index":303,"title":{},"body":{"index.html":{}}}],["unique",{"_index":359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":316,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["updatebyid",{"_index":172,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatebyid(@body",{"_index":199,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatebyid(id",{"_index":223,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatebyid(updateuserdto",{"_index":181,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserdto",{"_index":184,"title":{},"body":{"controllers/UsersController.html":{}}}],["uri",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["usecreateindex",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["useinterceptors",{"_index":187,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":195,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":162,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.controller",{"_index":207,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.dto",{"_index":193,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":146,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:14",{"_index":152,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":150,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.service",{"_index":191,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["usermodel",{"_index":217,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":168,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users/user.controller",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["users/user.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["users/user.service",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":208,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":85,"title":{"controllers/UsersController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":79,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":80,"title":{"injectables/UsersService.html":{}},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usevalue",{"_index":121,"title":{},"body":{"modules/ConfigModule.html":{}}}],["validator",{"_index":158,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":355,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["versionkey",{"_index":361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":311,"title":{},"body":{"index.html":{}}}],["website",{"_index":343,"title":{},"body":{"index.html":{}}}],["world",{"_index":115,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":332,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/filters/all-exceptions.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: unknown, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exceptions/filters/all-exceptions.filter.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const res = ctx.getResponse();\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    if (status == 400) {\n      return res\n        .status(status)\n        .json(exception['response'])\n    }\n\n    return res.status(500).json({\n      statusCode: status,\n      message: exception['errmsg'],\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/app/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/components/app/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, CacheModule } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersController } from '../users/user.controller';\nimport { UsersService } from '../users/user.service';\nimport { UsersModule } from '../users/user.module';\nimport { ConfigModule as CustomConfigModule } from '../config/config.module';\nimport { ConfigService } from '../config/config.service';\n\n@Module({\n  imports: [\n    UsersModule,\n    ConfigModule.forRoot({\n      envFilePath: `${process.cwd()}/src/config/env/.env.development`,\n    }),\n    MongooseModule.forRootAsync({\n      imports: [CustomConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'),\n        useCreateIndex: true,\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AppController, UsersController],\n  providers: [AppService, UsersService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/app/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/components/app/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from './config.service';\n\n@Module({\n  providers: [{\n    provide: ConfigService,\n    useValue: new ConfigService(`${process.env.NODE_ENV || 'development'}`),\n  }],\n  exports: [ConfigService],\n})\n\nexport class ConfigModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                envConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type)\n                    \n                \n                        \n                            \n                                Defined in src/components/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            envConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/config/config.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(param: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/config/config.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as dotenv from 'dotenv';\nimport * as fs from 'fs';\n\nexport class ConfigService {\n  private readonly envConfig: {[key: string]: string};\n\n  constructor(type) {\n    this.envConfig = dotenv.parse(\n      fs.readFileSync(\n        `${process.cwd()}/src/config/env/.env.${type}`\n      )\n    );\n  }\n\n  get(param: string): string {\n    return this.envConfig[param];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                fullname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/dto/create-user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fullname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@MinLength(1)@MaxLength(24)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/dto/create-user.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsString,\n  IsNotEmpty,\n  MinLength,\n  MaxLength\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(1)\n  @MaxLength(24)\n  readonly fullname: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  readonly email: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/interfaces/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        fullname\n                                \n                                \n                                            Optional\n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullname\n                                    \n                                \n                                \n                                    \n                                        fullname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id?: string;\n  fullname: string;\n  email: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                deleteById\n                            \n                            \n                                findAll\n                            \n                            \n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/components/users/user.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteById(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/components/users/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/components/users/user.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateById\n                        \n                        \n                    \n                \n            \n            \n                \nupdateById(updateUserDto: CreateUserDto, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/components/users/user.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Body,\n  Param,\n  CacheInterceptor,\n  UseInterceptors,\n  Get,\n  Post,\n  Put,\n  Delete\n} from '@nestjs/common';\nimport { User } from './interfaces/user.interface';\nimport { UsersService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\n\n@Controller('users')\n@UseInterceptors(CacheInterceptor)\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get()\n  findAll(): Promise {\n    return this.usersService.findAll();\n  }\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto): Promise {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Put(':id')\n  updateById(@Body() updateUserDto: CreateUserDto, @Param('id') id): Promise {\n    return this.usersService.updateById(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  deleteById(@Param('id') id): Promise {\n    return this.usersService.deleteById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/users/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CacheModule, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersController } from './user.controller';\nimport { UsersService } from './user.service';\nimport { UserSchema } from './schemas/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'User', schema: UserSchema }]),\n    CacheModule.register(),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [\n    MongooseModule.forFeature([{ name: 'User', schema: UserSchema }]),\n    CacheModule.register(),\n  ],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/components/users/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/user.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteById(id: Types.ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/user.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            Types.ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/user.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateById(id: Types.ObjectId, newProfile: User)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/user.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            Types.ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newProfile\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from './interfaces/user.interface';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { Model, Types } from 'mongoose';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel('User') private readonly userModel: Model) {}\n\n  async findAll(): Promise {\n    return await this.userModel.find();\n  }\n\n  async create(user: CreateUserDto): Promise {\n    return await this.userModel.create(user);\n  }\n\n  async updateById(id: Types.ObjectId, newProfile: User): Promise {\n    return await this.userModel.updateOne({ _id: id }, { $set: newProfile });\n  }\n\n  async deleteById(id: Types.ObjectId): Promise {\n    return await this.userModel.deleteOne({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/components/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/components/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/components/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/components/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/users/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/components/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/users/user.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/users/user.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/config/middleware.ts\n            \n            function\n            init\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exceptions/filters/all-exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : 7.0.0\n        \n            @nestjs/config : 0.4.0\n        \n            @nestjs/core : 7.0.0\n        \n            @nestjs/mongoose : 6.4.0\n        \n            @nestjs/platform-express : 7.0.0\n        \n            cache-manager : 3.2.1\n        \n            class-transformer : 0.2.3\n        \n            class-validator : 0.11.1\n        \n            compression : 1.7.4\n        \n            express : 4.17.1\n        \n            helmet : 3.22.0\n        \n            mongoose : 5.9.7\n        \n            reflect-metadata : 0.1.13\n        \n            rimraf : 3.0.2\n        \n            rxjs : 6.5.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            init   (src/.../middleware.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/config/middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/components/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Schema\n\n                        \n                    \n                    \n                        \n                            Default value : new Schema(\n  {\n    fullname: {\n      type: String,\n    },\n    email: {\n      type: String,\n      unique: true,\n    },\n  },\n  {\n    collection: 'users',\n    versionKey: false,\n  }\n)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
